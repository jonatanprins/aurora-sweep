/**
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping-term-ms = <200>;
};

&sk {
    quick-release;
    release-after-ms = <700>;
};

/ {
    behaviors {
        ad_i: adaptive_i {
            compatible = "zmk,behavior-antecedent-morph";
            label = "ADAPTIVE_I";
            #binding-cells = <0>;
            defaults = <&kp I>;
            bindings = <&kp J>;
            antecedents = <I>;
            max-delay-ms = <250>;
        };

        hmrl: hmrl {
            compatible = "zmk,behavior-hold-tap";
            label = "HMRL";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            require-prior-idle-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <5 6 7 8 15 16 17 18 25 26 27 28 32 33 8 9 18 19 28 29 30 31>;
        };

        hmrr: hmrr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMRR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            require-prior-idle-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 31 30 32 33>;
        };

        hmrr_adi: hmrr_adi {
            compatible = "zmk,behavior-hold-tap";
            label = "HMRR_ADI";
            bindings = <&kp>, <&ad_i>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            require-prior-idle-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 31 30 32 33>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_layer_num {
            timeout-ms = <50>;
            key-positions = <30 33>;
            bindings = <&sl 6>;
            slow-release;
        };

        command {
            bindings = <&kp COLON>;
            key-positions = <26 28>;
            timeout-ms = <60>;
        };

        search {
            bindings = <&kp SLASH>;
            key-positions = <21 23>;
            timeout-ms = <60>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
            timeout-ms = <60>;
        };

        return {
            bindings = <&kp RETURN>;
            key-positions = <8 7>;
            timeout-ms = <60>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <15 25>;
            timeout-ms = <60>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <16 26>;
            timeout-ms = <60>;
        };

        star {
            bindings = <&kp STAR>;
            key-positions = <17 7>;
            timeout-ms = <60>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <3 13>;
            timeout-ms = <60>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W      &kp F  &kp P  &kp B    &kp J  &kp L  &kp U      &kp Y      &kp SQT
&kp A  &kp R      &kp S  &kp T  &kp G    &kp M  &kp N  &kp E      &ad_i      &kp O
&kp Z  &kp X      &kp C  &kp D  &kp V    &kp K  &kp H  &kp COMMA  &kp DOT    &kp SEMI
&sl 5  &sk LSHFT                                                  &kp SPACE  &sl 4
            >;
        };

        canary_layer {
            bindings = <
&kp W  &kp L      &kp Y  &kp P  &kp B    &kp Z  &kp F  &kp O     &kp U      &kp SQT
&kp C  &kp R      &kp S  &kp T  &kp G    &kp M  &kp N  &kp E     &ad_i      &kp A
&kp Q  &kp J      &kp V  &kp D  &kp K    &kp X  &kp H  &kp FSLH  &kp COMMA  &kp DOT
&sl 5  &sk LSHFT                                                 &kp SPACE  &sl 4
            >;
        };

        gallium_v2 {
            bindings = <
&kp B  &kp L      &kp D  &kp C  &kp V    &kp J  &kp F  &kp O    &kp U      &kp COMMA
&kp N  &kp R      &kp T  &kp S  &kp G    &kp Y  &kp H  &kp A    &kp E      &kp I
&kp X  &kp Q      &kp M  &kp W  &kp Z    &kp K  &kp P  &kp SQT  &kp SEMI   &kp DOT
&sl 5  &sk LSHFT                                                &kp SPACE  &sl 4
            >;
        };

        aptmak {
            bindings = <
&kp V     &kp W  &kp F  &kp P  &kp B    &kp J  &kp L  &kp U      &kp Y      &kp SQT
&kp R     &kp S  &kp T  &kp H  &kp K    &kp X  &kp N  &kp A      &kp I      &kp O
&kp FSLH  &kp C  &kp G  &kp D  &kp Q    &kp Z  &kp M  &kp COMMA  &kp DOT    &kp EQUAL
&sl 5     &kp E                                                  &kp SPACE  &sl 4
            >;
        };

        left_layer {
            bindings = <
&kp ESCAPE  &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp TILDE      &kp CARET  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp GRAVE
&kp MINUS   &kp ASTERISK      &kp EQUAL       &kp UNDER             &kp DOLLAR     &kp HASH   &sk RGUI               &sk RIGHT_ALT    &sk RIGHT_CONTROL  &kp RIGHT_SHIFT
&kp PLUS    &kp PIPE          &kp AT_SIGN     &kp FSLH              &kp PERCENT    &none      &kp BSLH               &kp AMPS         &kp QUESTION       &kp EXCL
&trans      &trans                                                                                                                    &trans             &trans
            >;
        };

        right_layer {
            bindings = <
&trans      &trans     &trans    &trans    &trans    &trans    &kp BSPC   &trans     &trans     &trans
&sk LSHFT   &sk LCTRL  &sk LALT  &sk LGUI  &trans    &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp RET
&kp ESCAPE  &trans     &trans    &kp TAB   &trans    &trans    &kp PG_DN  &kp PG_UP  &trans     &kp TAB
&trans      &trans                                                                   &trans     &trans
            >;
        };

        num_layer {
            bindings = <
&kp N1     &kp N2     &kp N3    &kp N4    &kp N5    &kp N6  &kp N7    &kp N8         &kp N9             &kp N0
&sk LSHFT  &sk LCTRL  &sk LALT  &sk LGUI  &trans    &trans  &sk RGUI  &sk RIGHT_ALT  &sk RIGHT_CONTROL  &kp RIGHT_SHIFT
&trans     &trans     &trans    &trans    &trans    &trans  &trans    &trans         &trans             &trans
&trans     &trans                                                                    &trans             &trans
            >;
        };

        tri_layer {
            bindings = <
&kp NUM_1   &kp NUM_2   &kp NUM_3   &kp NUM_4  &kp NUM_5    &trans  &tog 1     &tog 2        &tog 3      &trans
&kp F1      &kp F2      &kp F3      &kp F4     &kp F5       &trans  &kp PG_UP  &kp K_VOL_UP  &kp K_MUTE  &trans
&bt BT_CLR  &bt BT_NXT  &bt BT_PRV  &kp F6     &kp F7       &trans  &kp PG_DN  &kp K_VOL_DN  &trans      &trans
&trans      &trans                                                                           &trans      &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        menu {
            if-layers = <4 5>;
            then-layer = <7>;
        };
    };
};
